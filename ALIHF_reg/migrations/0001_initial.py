# Generated by Django 5.0.6 on 2024-05-22 14:16

import django.db.models.deletion
import phonenumber_field.modelfields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BioMedInformation",
            fields=[
                (
                    "bio_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("date_of_birth", models.DateField()),
                ("medical_info", models.TextField(max_length=500)),
            ],
            options={
                "verbose_name_plural": "BioMed Information",
                "db_table": "BioMed Information",
            },
        ),
        migrations.CreateModel(
            name="ContactInformation",
            fields=[
                (
                    "contact_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("street_address", models.CharField(max_length=100)),
                ("city", models.CharField(max_length=100)),
                ("state_or_province", models.CharField(max_length=100)),
                ("postal_code", models.CharField(max_length=10)),
                ("country", models.CharField(max_length=100)),
                ("nationality", models.CharField(max_length=100)),
                ("issued_id_number", models.CharField(max_length=100)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name_plural": "Contact Information",
                "db_table": "Contact Information",
            },
        ),
        migrations.CreateModel(
            name="Countries",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("country", models.CharField(max_length=7)),
            ],
            options={"verbose_name_plural": "Countries", "db_table": "Countries",},
        ),
        migrations.CreateModel(
            name="EducationalBackgroundInformation",
            fields=[
                (
                    "education_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name_of_educational_institution", models.CharField(max_length=100)),
                ("degrees_obtained_and_dates", models.TextField(max_length=500)),
                ("certifications", models.CharField(max_length=500)),
                ("memberships", models.CharField(max_length=500)),
            ],
            options={
                "verbose_name_plural": "Educational Background Information",
                "db_table": "Educational Background Information",
            },
        ),
        migrations.CreateModel(
            name="EmergencyInformation",
            fields=[
                (
                    "emergency_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("contact_name", models.CharField(max_length=100)),
                (
                    "contact_phone_number",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True,
                        db_index=True,
                        max_length=128,
                        region=None,
                        unique=True,
                    ),
                ),
                ("contact_address", models.CharField(max_length=100)),
            ],
            options={
                "verbose_name_plural": "Emergency Information",
                "db_table": "Emergency Information",
            },
        ),
        migrations.CreateModel(
            name="EmploymentHistory",
            fields=[
                (
                    "employment_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("current_employer", models.CharField(max_length=100)),
                ("previous_employer", models.CharField(max_length=100)),
                ("current_job_title", models.CharField(max_length=100)),
                ("current_job_description", models.CharField(max_length=500)),
                ("date_of_employment", models.DateField()),
                ("resume_or_cv", models.FileField(upload_to="uploads/resume/")),
                ("personal_statement", models.TextField(max_length=500)),
                (
                    "letter_of_recommendation",
                    models.FileField(upload_to="uploads/recommendation/"),
                ),
            ],
            options={
                "verbose_name_plural": "Employment History",
                "db_table": "Employment History",
            },
        ),
        migrations.CreateModel(
            name="Gender",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("gender_title", models.CharField(max_length=7)),
            ],
            options={"verbose_name_plural": "Gender", "db_table": "Gender",},
        ),
        migrations.CreateModel(
            name="GovernmentID",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("id_type", models.CharField(max_length=100)),
            ],
            options={
                "verbose_name_plural": "GovernmentID",
                "db_table": "GovernmentID",
            },
        ),
        migrations.CreateModel(
            name="Qualifications",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("qualification", models.CharField(max_length=100)),
            ],
            options={
                "verbose_name_plural": "Qualifications",
                "db_table": "Qualifications",
            },
        ),
        migrations.CreateModel(
            name="RelationshipType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("relationship", models.CharField(max_length=7)),
            ],
            options={
                "verbose_name_plural": "Relationship Type",
                "db_table": "Relationship Type",
            },
        ),
        migrations.CreateModel(
            name="FellowshipProgram",
            fields=[
                (
                    "fellowship_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("is_fellowship", models.BooleanField(default=False)),
                ("is_webinar", models.BooleanField(default=False)),
                ("fellowship_approved", models.BooleanField(default=False)),
                ("webinar_approved", models.BooleanField(default=False)),
                ("data_processing_consent", models.BooleanField(default=False)),
                (
                    "biodata_and_medical_information",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ALIHF_reg.biomedinformation",
                    ),
                ),
                (
                    "contact_information",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ALIHF_reg.contactinformation",
                    ),
                ),
                (
                    "education_background_information",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ALIHF_reg.educationalbackgroundinformation",
                    ),
                ),
                (
                    "emergency_information",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ALIHF_reg.emergencyinformation",
                    ),
                ),
                (
                    "employment_history",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ALIHF_reg.employmenthistory",
                    ),
                ),
                (
                    "user_id",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Fellowship Program",
                "db_table": "Fellowship Program",
            },
        ),
        migrations.AddField(
            model_name="employmenthistory",
            name="program_id",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                to="ALIHF_reg.fellowshipprogram",
            ),
        ),
        migrations.AddField(
            model_name="emergencyinformation",
            name="program_id",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                to="ALIHF_reg.fellowshipprogram",
            ),
        ),
        migrations.AddField(
            model_name="educationalbackgroundinformation",
            name="program_id",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                to="ALIHF_reg.fellowshipprogram",
            ),
        ),
        migrations.AddField(
            model_name="contactinformation",
            name="program_id",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                to="ALIHF_reg.fellowshipprogram",
            ),
        ),
        migrations.AddField(
            model_name="biomedinformation",
            name="program_id",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                to="ALIHF_reg.fellowshipprogram",
            ),
        ),
        migrations.AddField(
            model_name="biomedinformation",
            name="gender",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="ALIHF_reg.gender"
            ),
        ),
        migrations.AddField(
            model_name="contactinformation",
            name="identification_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="ALIHF_reg.governmentid"
            ),
        ),
        migrations.AddField(
            model_name="educationalbackgroundinformation",
            name="highest_qualification",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="highest_qualification",
                to="ALIHF_reg.qualifications",
            ),
        ),
        migrations.AddField(
            model_name="educationalbackgroundinformation",
            name="professional_credentials",
            field=models.ManyToManyField(to="ALIHF_reg.qualifications"),
        ),
        migrations.AddField(
            model_name="emergencyinformation",
            name="contact_relationship",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="ALIHF_reg.relationshiptype",
            ),
        ),
    ]
